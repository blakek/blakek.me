{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Content.js","webpack:///./src/components/Section.js","webpack:///./src/components/Document/Footer.js","webpack:///./src/components/Document/GlobalStyles.js","webpack:///./src/components/Document/SEO.js","webpack:///./src/components/Document/index.js","webpack:///./src/components/Title.js","webpack:///./src/components/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","title","style","minHeight","withColor","m","module","exports","require","default","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Content","styled","section","withConfig","displayName","componentId","Section","p","ContentWrapper","Footer","react_default","components_Section","as","href","aria-label","color","createGlobalStyle","_templateObject","SEO","description","lang","meta","keywords","gatsby_browser_entry","detailsQuery","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1025518380","defaultProps","array","arrayOf","Wrapper","div","Layout","seoProps","objectWithoutPropertiesLoose_default","react","Document_SEO","GlobalStyles","Document_Footer","node","Title","h1","components_Content","Document","components_Title"],"mappings":"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","file":"component---src-pages-404-js-479bb0bfbcd1ea09c2bf.js","sourcesContent":["import React from 'react';\n\nimport { Document, Section, Title } from '../components';\n\nconst NotFoundPage = () => (\n  <Document title=\"404: Not found\">\n    <Section style={{ minHeight: '100vh' }} withColor>\n      <Title>404 - Not Found</Title>\n      <p>You just found a page that doesn&#39;t exist.</p>\n    </Section>\n  </Document>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import styled from 'styled-components';\n\nconst Content = styled.section`\n  margin: 0.8em 0;\n  max-width: 800px;\n  text-align: left;\n  width: 100%;\n\n  & > a {\n    color: #7142ff;\n  }\n`;\n\nexport default Content;\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  align-items: center;\n  background-color: ${p => (p.withColor ? '#7142ff' : '#fff')};\n  color: ${p => (p.withColor ? '#fff' : '#333')};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1.0875rem 1.45rem;\n`;\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Content from '../Content';\nimport Section from '../Section';\n\nconst ContentWrapper = styled(Content)`\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  font-size: 0.6rem;\n  justify-content: space-between;\n`;\n\nconst Footer = () => (\n  <Section as=\"footer\" withColor>\n    <ContentWrapper>\n      <div>\n        <a href=\"https://blakek.me/\">\n          Made with{' '}\n          <span aria-label=\"love\" style={{ color: '#ff4271' }}>\n            ♥\n          </span>{' '}\n          from Nashville\n        </a>\n      </div>\n\n      <div>\n        <a href=\"https://github.com/blakek/blakek.me\">View source</a>\n      </div>\n    </ContentWrapper>\n  </Section>\n);\n\nexport default Footer;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: 460px) {\n    html {\n      font-size: 20px;\n    }\n  }\n\n  body {\n    margin: 0;\n  }\n\n  a {\n    color: inherit;\n  }\n\n  @import url('https://fonts.googleapis.com/css?family=IBM+Plex+Serif:700,700i');\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(`, `)\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Footer from './Footer';\nimport GlobalStyles from './GlobalStyles';\nimport SEO from './SEO';\n\nconst Wrapper = styled.div`\n  box-sizing: border-box;\n  min-height: 100vh;\n  overflow: auto;\n  width: 100vw;\n`;\n\nconst Layout = ({ children, ...seoProps }) => (\n  <Fragment>\n    <SEO {...seoProps} />\n    <GlobalStyles />\n\n    <Wrapper>\n      {children}\n      <Footer />\n    </Wrapper>\n  </Fragment>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-family: 'IBM Plex Serif', serif;\n  font-size: 4.75rem;\n  font-weight: 600;\n  letter-spacing: 0.5rem;\n  margin: 0.5em;\n`;\n\nexport default Title;\n","import Content from './Content';\nimport Document from './Document';\nimport Section from './Section';\nimport Title from './Title';\n\nexport { Content, Document, Section, Title };\n"],"sourceRoot":""}